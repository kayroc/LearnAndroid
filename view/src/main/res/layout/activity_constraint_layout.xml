<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    <!--
        // 控制上下左右四个方向的约束
        app:layout_constraintLeft_toLeftOf="parent"             // 产生约束: 自身的左边和指定控件的左边
        app:layout_constraintLeft_toRightOf="@id/guideline1"    // 产生约束: 自身的左边和指定控件的右边
        app:layout_constraintRight_toLeftOf="@id/guideline1"    // 产生约束: 自身的右边和指定控件的左边
        app:layout_constraintRight_toRightOf="parent"           // 产生约束: 自身的右边和指定控件的右边
        app:layout_constraintStart_toEndOf="@id/guideline1"     // 产生约束: 自身的开始边和指定控件的结束边
        app:layout_constraintStart_toStartOf="parent"           // 产生约束: 自身的开始边和指定控件的开始边
        app:layout_constraintEnd_toEndOf="parent"               // 产生约束: 自身的结束边和指定控件的结束边
        app:layout_constraintEnd_toStartOf="@id/guideline1"     // 产生约束: 自身的结束边和指定控件的开始边
        app:layout_constraintTop_toBottomOf="@id/guideline2"    // 产生约束: 自身的顶边和指定控件的底边
        app:layout_constraintTop_toTopOf="parent"               // 产生约束: 自身的顶边和指定控件的顶边
        app:layout_constraintBottom_toBottomOf="parent"         // 产生约束: 自身的底边和指定控件的底边
        app:layout_constraintBottom_toTopOf="@+id/guideline2"   // 产生约束: 自身的底边和指定控件的顶边
        // 控制基线的约束
        app:layout_constraintBaseline_toBaselineOf="parent"     // 产生约束: 自身的基线和指定控件的基线
        // 控制边距的约束
        android:layout_marginStart
        android:layout_marginEnd
        android:layout_marginLeft
        android:layout_marginTop
        android:layout_marginRight
        android:layout_marginBottom
        app:layout_goneMarginStart                              // 控件可见性为 gone 时使用的 marginStart
        app:layout_goneMarginEnd                                // 控件可见性为 gone 时使用的 marginEnd
        app:layout_goneMarginLeft                               // 控件可见性为 gone 时使用的 marginLeft
        app:layout_goneMarginTop                                // 控件可见性为 gone 时使用的 marginTop
        app:layout_goneMarginRight                              // 控件可见性为 gone 时使用的 marginRight
        app:layout_goneMarginBottom                             // 控件可见性为 gone 时使用的 marginBottom
        // 控制宽高比的约束
        app:layout_constraintDimensionRatio="2:1"               // 宽:高 = 2:1 (要求宽高值有一项为0)
        app:layout_constraintDimensionRatio="H,2:1"             // 高:宽 = 2:1 (要求宽高值有一项为0)
        app:layout_constraintDimensionRatio="w,2:1"             // 宽:高 = 2:1 (要求宽高值有一项为0)
        // 辅助控制高度
        app:layout_constraintHeight_default="spread"            // 默认高度 [spread:相当于match_parent, wrap:相当于wrap_content]
        app:layout_constraintHeight_max="50dp"                  // 最大高度
        app:layout_constraintHeight_min="30dp"                  // 最小高度
        // 辅助控制宽度
        app:layout_constraintWidth_default="spread"             // 默认宽度
        app:layout_constraintWidth_max="50dp"                   // 最大宽度
        app:layout_constraintWidth_min="30dp"                   // 最小宽度
        // 控制水平约束
        app:layout_constraintHorizontal_bias="0.5"              // 水平约束的偏移 (0为左侧, 0.5居中, 1为右侧)
        app:layout_constraintHorizontal_chainStyle="spread"     // 群组关联样式 [spread:展开,存在多余空间则平分(默认); spread_inside:展开,存在多余空间,两端不占空间,其余平分; packed:包裹,群组两侧产生约束使它们聚集在一起]
        app:layout_constraintHorizontal_weight="1"              // 群组关联样式为 spread 或 spread_inside 时, 各 View 平分剩余空间的权重
        // 控制垂直约束
        app:layout_constraintVertical_bias="0.5"                // 同理于控制水平约束
        app:layout_constraintVertical_chainStyle="spread"       // 同理于控制水平约束
        app:layout_constraintVertical_weight="1"/>              // 同理于控制水平约束
        // 参考线
        app:layout_constraintGuide_begin="60dp"                 // 参考线距离左侧或顶部的固定距离
        app:layout_constraintGuide_end="60dp"                   // 参考线距离右侧或底部的固定距离
        app:layout_constraintGuide_percent="0.66"/>             // 参考线在父控件中的宽度或高度的百分比
        // 环形定位
        layout_constraintCircle	                                // 引用另一个小部件 ID
        layout_constraintCircleRadius                           // 到其它小部件中心的距离
        layout_constraintCircleAngle                            // 小部件应处于的角度 ( 度数，从 0 到 360 ）

        /*
         * 群组: View 之间互相约束, 会产生相互影响, 组成一个"群组".
         *      群组中的第一个 View 被称之为 Chain head, 由它控制着整个群组的属性
         *      包括 chainStyle & bias & weight
         */
    -->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="0dp"
        android:layout_height="0dp"
        android:layout_marginStart="16dp"
        android:layout_marginTop="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:background="#3300FF00"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent">

        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:gravity="center"
            android:text="ConstraintLayout\n详情看注释"
            android:textColor="#666666"
            android:textSize="20sp"
            tools:ignore="HardcodedText" />
    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.constraintlayout.widget.ConstraintLayout>